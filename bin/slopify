#!/usr/bin/env nix-shell
#! nix-shell -p cacert uv cacert git openssh gh
#! nix-shell -i 'uv run --script'

# /// script
# dependencies = [
#        "jira @ git+https://github.com/pycontribs/jira.git@3.10.1",
#        "siesta @ git+https://github.com/ihucos/siesta.git",
# ]
# ///



import os
import sys
from configparser import ConfigParser


project_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
os.environ["PYTHONPATH"] = os.path.join(project_dir, "lib")


# Read config 
config = ConfigParser()
config.optionxform = str
if not config.read(os.path.expanduser("~/.slopify.ini")):
    print("Could not read ~/.slopify.ini", file=sys.stderr)
    sys.exit(1)

# Read env vars from config
env = dict(config["env"]) if "env" in config else {}
os.environ.update(env)

if len(sys.argv) == 1:
  print("Usage: slopify <subcommand> (try `slopify help`)")
  sys.exit(1)

subcommand = sys.argv[1]
subcommand_path = os.path.join(project_dir, "subcommands", subcommand)

if not os.path.exists(subcommand_path):
  print(f"Subcommand {subcommand} does not exist")
  sys.exit(1) 

os.execv(subcommand_path, sys.argv[1:])
