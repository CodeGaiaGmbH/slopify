#!/usr/bin/env siesta
# vim: set ft=jinja


#
# Load config
#
{% set conf = loadini("~/.slopify.ini") %}


{% set ticket = import("utils").load_and_clone_issue() %}

#
# Create a fresh branch
#
{{print("Creating fresh branch...")}}
{% set branch|run %}
  branch_candiate={{ticket.key|escape}}-{{ticket.fields.summary|slugify|escape}}
  if git ls-remote --heads origin "$branch_candiate" | grep -q "$branch_candiate"; then
    echo "$branch_candiate"-"$RANDOM"
  else
    echo "$branch_candiate"
  fi
{% endset %}
{% filter run() %}
  set -x
  git checkout -b {{branch|escape}}
{% endfilter %}

#
# implement
#
{{print("Implementing ticket...")}}
{{ import("ticket").implement(ticket) }}

#
# Commit the changes
#
{% include "util:stage-all" %}
{% include "util:commit" %}

#
# Commit any eventual changes done by the hook
#
{% set hook_script = conf.hooks[repo] %}
{% if hook_script %}
  {{print("Running hook script...")}}
  {% filter run %}
    set -ex
    {{ hook_script }}
    git add .
    git diff
    git commit \
      -m {{ conf.hooks_commit[repo]|default("Run hook")|escape }} \
      -m "Co-authored-by: slopify AI <slopify@codegaia.io>" \
      --no-verify || true
  {% endfilter %}
{% else %}
  {{print("No hook script found.")}}
{% endif %}


#
# Push
#
{% filter run %}
    git push --set-upstream origin {{branch|escape}} --no-verify
{% endfilter %}

#
# Prompt for PR title
#
{% include "util:create-pr" %}
