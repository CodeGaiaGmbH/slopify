#!/usr/bin/env -S uv run --script
# /// script
# dependencies = [
#    "llm",
#    "llm-anthropic",
#    "jira @ git+https://github.com/pycontribs/jira.git@3.10.1",
# ]
# ///

import llm
import utils
import json


PROMPT_TEMPLATE = """
# Task
Make a implementation plan.

# Project overview
```
{project_map}
```

## Ticket title
{title}

## Ticket description
```
{description}
```

# Notes
- Understand project conventions by reading files.
"""

# MODEL = "claude-4-sonnet"
MODEL = "claude-3.5-haiku"


def main():

    issue = utils.load_and_clone_issue()

    model = llm.get_model(MODEL)

    prompt = PROMPT_TEMPLATE.format(
        project_map=utils.get_project_map(),
        title=issue.fields.summary,
        description=(
            issue.fields.description.strip(" \n") if issue.fields.description else ""
        ),
    )

    conversation = model.conversation()
    response = conversation.chain(
        prompt,
        tools=[utils.readFiles],
    )
    plan = response.text()
    print(plan)

    response = conversation.prompt(
        "Summarize the changes (in imperative form):\n\n{plan}",
        schema=llm.schema_dsl("filename, summary", multi=True),
    )
    print("Summarizing...")
    summary = json.loads(response.text())

    print("Updating description...")
    descr = issue.fields.description or ""
    descr += "\n\n"
    descr += "h3. Implementation plan\n\n"
    for item in summary["items"]:
        descr += f"* {{{{{item['filename']}}}}} {item['summary']}\n"
    issue.update(description=descr)

    print("All clear!")


if __name__ == "__main__":
    main()
